stashchik tutorial: https://www.youtube.com/watch?v=d6WC5n9G_sM&t=1803s

start docker:
$open -a Docker (Docker setup)
docker ps

minikube start
minikube status

minikube ip 192.168.49.2
ssh docker@192.168.49. - does not work if not using virtualbox

 kubectl cluster-info     
 kubectl get nodes
  
kubectl get namespaces 

kubectl get pods (default is the default nam)


kubectl get pods  --namespace=kube-system                                                                                                                                     ✔  minikube ⎈  18:11:49

NAME                               READY   STATUS    RESTARTS        AGE
coredns-787d4945fb-txf2t           1/1     Running   10 (264d ago)   302d
etcd-minikube                      1/1     Running   11 (264d ago)   302d
kube-apiserver-minikube            1/1     Running   11 (264d ago)   302d
kube-controller-manager-minikube   1/1     Running   11 (264d ago)   302d
kube-proxy-cm8hc                   1/1     Running   11 (264d ago)   302d
kube-scheduler-minikube            1/1     Running   11 (264d ago)   302d
storage-provisioner                1/1     Running   22 (14m ago)    302d

kubectl run nginx --image=nginx                                                                                                                                           INT ✘  minikube ⎈  v
pod/nginx created

kubectl describe pod nginx                                                                                                                                                    ✔  minikube ⎈   
Name:             nginx
Namespace:        default
Priority:         0
Service Account:  default
Node:             minikube/192.168.49.2
Start Time:       Tue, 16 Jan 2024 18:15:26 +0800
Labels:           run=nginx
Annotations:      <none>
Status:           Running
IP:               10.244.0.92
IPs:
  IP:  10.244.0.92
Containers:
  nginx:
    Container ID:   docker://f8798d4032a74b0403a43deebd09e1949c16a86581cfe4a45416f725a09e97eb
    Image:          nginx
    Image ID:       docker-pullable://nginx@sha256:4c0fdaa8b6341bfdeca5f18f7837462c80cff90527ee35ef185571e1c327beac
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Tue, 16 Jan 2024 18:15:42 +0800
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-b2cmc (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  kube-api-access-b2cmc:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age    From               Message
  ----    ------     ----   ----               -------
  Normal  Scheduled  3m36s  default-scheduler  Successfully assigned default/nginx to minikube
  Normal  Pulling    3m36s  kubelet            Pulling image "nginx"
  Normal  Pulled     3m21s  kubelet            Successfully pulled image "nginx" in 14.053948965s (14.053989006s including waiting)
  Normal  Created    3m21s  kubelet            Created container nginx
  Normal  Started    3m21s  kubelet            Started container nginx


  docker ps
   get the hash of nginx container running in the pod

  docker exec -it 0cfc984d6c83 sh              
  #hostname
k3d-jan16-cluster-serverlb
  #hostname -i
172.19.0.4 

 kubectl get pods -o wide   

  kubectl delete pod nginx


 k create deployment nginx-deployment --image=nginx 
 
k describe deployment nginx-deployment                                                                                                              ✔  k3d-jan16-cluster ⎈  19:21:44 
Name:                   nginx-deployment
Namespace:              default
CreationTimestamp:      Tue, 16 Jan 2024 19:20:39 +0800
Labels:                 app=nginx-deployment
Annotations:            deployment.kubernetes.io/revision: 1
Selector:               app=nginx-deployment
Replicas:               1 desired | 1 updated | 1 total | 1 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:  app=nginx-deployment
  Containers:
   nginx:
    Image:        nginx
    Port:         <none>
    Host Port:    <none>
    Environment:  <none>
    Mounts:       <none>
  Volumes:        <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   nginx-deployment-66fb7f764c (1/1 replicas created)
Events:
  Type    Reason             Age   From                   Message
  ----    ------             ----  ----                   -------
  Normal  ScalingReplicaSet  2m1s  deployment-controller  Scaled up replica set nginx-deployment-66fb7f764c to 1
 
k get pods                                                                                                                                          ✔  k3d-jan16-cluster ⎈  19:22:40 
NAME                                READY   STATUS    RESTARTS   AGE
nginx-deployment-66fb7f764c-t5rcx   1/1     Running   0          7m32s
  
see NewReplicaSet above: nginx-deployment-66fb7f764c
t5rcx is the has of the pod

$k describe pod nginx-deployment-66fb7f764c-t5rcx

k scale deployment nginx-deployment --replicas=5                                                                                                    ✔  k3d-jan16-cluster ⎈  19:31:02 
deployment.apps/nginx-deployment scaled
 ~/src/k8s/stashchuk  k get pods                                                                                                                                          ✔  k3d-jan16-cluster 
NAME                                READY   STATUS    RESTARTS   AGE
nginx-deployment-66fb7f764c-t5rcx   1/1     Running   0          12m
nginx-deployment-66fb7f764c-gdhtl   1/1     Running   0          8s
nginx-deployment-66fb7f764c-c2cmx   1/1     Running   0          8s
nginx-deployment-66fb7f764c-kf46f   1/1     Running   0          8s
nginx-deployment-66fb7f764c-jf99n   1/1     Running   0          8s


 k get pods -o wide                                                                                                                                  ✔  k3d-jan16-cluster ⎈  19:33:11 
NAME                                READY   STATUS    RESTARTS   AGE    IP           NODE                         NOMINATED NODE   READINESS GATES
nginx-deployment-66fb7f764c-t5rcx   1/1     Running   0          14m    10.42.0.10   k3d-jan16-cluster-server-0   <none>           <none>
nginx-deployment-66fb7f764c-gdhtl   1/1     Running   0          2m3s   10.42.0.12   k3d-jan16-cluster-server-0   <none>           <none>
nginx-deployment-66fb7f764c-c2cmx   1/1     Running   0          2m3s   10.42.0.13   k3d-jan16-cluster-server-0   <none>           <none>
nginx-deployment-66fb7f764c-kf46f   1/1     Running   0          2m3s   10.42.0.14   k3d-jan16-cluster-server-0   <none>           <none>
nginx-deployment-66fb7f764c-jf99n   1/1     Running   0          2m3s   10.42.0.11   k3d-jan16-cluster-server-0   <none>           <none>

 k scale deployment nginx-deployment --replicas=3                                                                                                    ✔  k3d-jan16-cluster ⎈  19:35:06 
deployment.apps/nginx-deployment scaled
 ~/src/k8s/stashchuk  k get pods -o wide                                                                                                                                  ✔  k3d-jan16-cluster 
NAME                                READY   STATUS    RESTARTS   AGE     IP           NODE                         NOMINATED NODE   READINESS GATES
nginx-deployment-66fb7f764c-t5rcx   1/1     Running   0          15m     10.42.0.10   k3d-jan16-cluster-server-0   <none>           <none>
nginx-deployment-66fb7f764c-c2cmx   1/1     Running   0          3m26s   10.42.0.13   k3d-jan16-cluster-server-0   <none>           <none>
nginx-deployment-66fb7f764c-kf46f   1/1     Running   0          3m26s   10.42.0.14   k3d-jan16-cluster-server-0   <none>           <none>
 
k get deploy                                                                                                                                        ✔  k3d-jan16-cluster ⎈  19:36:29 
NAME               READY   UP-TO-DATE   AVAILABLE   AGE
nginx-deployment   3/3     3            3           21m

allow public to access nginx through a clusterIP service

k expose deployment nginx-deployment --port=8080 --target-port=80                                                                                   ✔  k3d-jan16-cluster ⎈  19:44:43 
service/nginx-deployment exposed

k get svc                                                                                                                                           ✔  k3d-jan16-cluster ⎈  19:45:58 
NAME               TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
kubernetes         ClusterIP   10.43.0.1       <none>        443/TCP    59m
nginx-deployment   ClusterIP   10.43.228.106   <none>        8080/TCP   3m43s

IP 10.43.228.106:8080 is available only from the cluster

k describe service nginx-deployment                                                                                                       INT ✘  15s  k3d-jan16-cluster ⎈  19:50:02 
Name:              nginx-deployment
Namespace:         default
Labels:            app=nginx-deployment
Annotations:       <none>
Selector:          app=nginx-deployment
Type:              ClusterIP
IP Family Policy:  SingleStack
IP Families:       IPv4
IP:                10.43.228.106
IPs:               10.43.228.106
Port:              <unset>  8080/TCP
TargetPort:        80/TCP
Endpoints:         10.42.0.10:80,10.42.0.13:80,10.42.0.14:80
Session Affinity:  None
Events:            <none>

k delete deployment nginx-deployment                                                                                                                ✔  k3d-jan16-cluster ⎈  19:58:25 
deployment.apps "nginx-deployment" deleted
 ~/src/k8s/stashchuk  k delete service nginx-deployment                                                                                                                   ✔  k3d-jan16-cluster k
service "nginx-deployment" deleted

k get ns                                                                                                                                            ✔  k3d-jan16-cluster ⎈  19:59:46 
NAME              STATUS   AGE
default           Active   70m
kube-system       Active   70m
kube-public       Active   70m
kube-node-lease   Active   70mk 

g
https://github.com/bstashchuk/k8s

 docker build . -t randygit/k8s-web-hello          


 docker push randygit/k8s-web-hello                                                                                                         ✔  4s  20:40:26 
Using default tag: latest
The push refers to repository [docker.io/randygit/k8s-web-hello]
83842bcb21de: Pushed 
923cc59bbb2e: Pushed 
0a164ad362e3: Pushed 
21baa53e78be: Pushed 
56204a717790: Mounted from library/node 
8ec6332cfe2c: Mounted from library/node 
15fc11f5f499: Mounted from library/node 
3ce819cc4970: Mounted from library/node 
latest: digest: sha256:0bd723b6cbb0bd74ac4257b895715f4b4dbd4019493f085d41816558a67aeb2b size: 1991
 ~/src/k8s/stashchuk/k8s-web-hello  master ?1  k get deploy                                                                                                        ✔  22s  k3d-jan16-cluster ⎈  20:41:53 
No resources found in default namespace.
 ~/src/k8s/stashchuk/k8s-web-hello  master ?1  k get svc                                                                                                                 ✔  k3d-jan16-cluster ⎈  20:46:21 
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.43.0.1    <none>        443/TCP   117m
 ~/src/k8s/stashchuk/k8s-web-hello  master ?1  k create deployment k8s-web-hello --image=randygit/k8s-web-hello                                                          ✔  k3d-jan16-cluster ⎈  20:46:26 
deployment.apps/k8s-web-hello created
 ~/src/k8s/stashchuk/k8s-web-hello  master ?1  k get pods                                                                                                                ✔  k3d-jan16-cluster ⎈  20:48:51 
NAME                             READY   STATUS    RESTARTS   AGE
k8s-web-hello-6864864454-6cxkm   1/1     Running   0          27s
 ~/src/k8s/stashchuk/k8s-web-hello  master ?1  k expose deployment k8s-web-hello  --port=3000                                                                            ✔  k3d-jan16-cluster ⎈  20:49:18 
service/k8s-web-hello exposed
 ~/src/k8s/stashchuk/k8s-web-hello  master ?1  k get svc                                                                                                                 ✔  k3d-jan16-cluster ⎈  20:51:19 
NAME            TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE
kubernetes      ClusterIP   10.43.0.1      <none>        443/TCP    122m
k8s-web-hello   ClusterIP   10.43.24.170   <none>        3000/TCP   4s
 ~/src/k8s/stashchuk/k8s-web-hello  master ?1                        

 k expose deployment k8s-web-hello  --type=NodePort --port=3000                                                            ✔  k3d-jan16-cluster ⎈  21:05:20 
service/k8s-web-hello exposed
 ~/src/k8s/stashchuk/k8s-web-hello  master ?1  k get svc                                                                                                                 ✔  k3d-jan16-cluster ⎈  21:06:08 
NAME            TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
kubernetes      ClusterIP   10.43.0.1       <none>        443/TCP          137m
k8s-web-hello   NodePort    10.43.129.222   <none>        3000:31652/TCP   6s

you can now use the nodeport address from outside k8s

equivalent to minikube ip
kubectl get -n kube-system service/traefik -o jsonpath="{.status.loadBalancer.ingress[0].ip}"                             ✔  k3d-jan16-cluster ⎈  21:06:14 

172.19.0.3%    


#upload new version:
k set image deployment k8s-web-hello k8s-web-hello=randygit/k8s-web-hello:2.0.0 
#get status of deployment
kubectl rollout status deploy k8s-web-hello  

delete all deployments, svc, pods in the default namespace
k delete all --all   


# to test docker image locally
docker run -p 80:3000 randygit/k8s-web-hello 

docker ps -a  


kubernetes documentation
https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/deployment-v1/
# alias for shortcut
alias k=kubectl

# apply deployment.yaml
k apply -f deployment.yaml       

# increase number of replicas, apply again
k apply -f deployment.yaml       

k get pods

# service.yaml
apiVersion: v1
kind: Service
metadata:
  name: k8s-web-hello
spec:
  type: LoadBalancer
  selector:
    app: k8s-web-hello
  ports:
  - port: 3030
    targetPort: 3000


targetPort is port of container
port is the external port of the service

k apply -f service.yaml                                                                                                                 ✔  k3d-jan16-cluster ⎈  10:26:26 
service/k8s-web-hello created
 ~/src/k8s/stashchuk  master !3  k get svc                                                                                                                               ✔  k3d-jan16-cluster ⎈  10:26:42 
NAME            TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
kubernetes      ClusterIP      10.43.0.1       <none>        443/TCP          73m
k8s-web-hello   LoadBalancer   10.43.220.140   172.19.0.3    3030:30481/TCP

curl 172.19.0.3:30481 from inside the cluster
what is k3s equivalent of minicube ip and minicube service k8s-web-hello?

#delete deployment and service
k delete -f deployment.yaml -f service.yaml 


# create two deployment
k8s-web-to-nginx  that will call k8s-web-hello

create nginx.yaml that will create a service named yaml, clusterIP type not visible to public

Public --> LoadBalancer --> k8s-web-to-nginx service ---> nginx service

but Public to LoadBalancer does not work

to check if k8s-web-to-nginx can find nginx service

k exec k8s-web-to-nginx-765fc6b4dd-9pn6h -- nslookup nginx                                                                                 ✔  k3d-jan16-cluster ⎈  11:28:50 
Server:         10.43.0.10
Address:        10.43.0.10:53


** server can't find nginx.svc.cluster.local: NXDOMAIN

Name:   nginx.default.svc.cluster.local
Address: 10.43.252.72

** server can't find nginx.cluster.local: NXDOMAIN

** server can't find nginx.svc.cluster.local: NXDOMAIN

** server can't find nginx.cluster.local: NXDOMAIN

command terminated with exit code 1

the response
Name:   nginx.default.svc.cluster.local
Address: 10.43.252.72

matches k get svc
k get svc                                                                                                                                  ✔  k3d-jan16-cluster ⎈  11:37:09 
NAME               TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE
kubernetes         ClusterIP      10.43.0.1      <none>        443/TCP          145m
k8s-web-to-nginx   LoadBalancer   10.43.5.31     172.19.0.3    3333:31241/TCP   12m
nginx              ClusterIP      10.43.252.72   <none>        80/TCP           

or 
k describe service nginx                                                                                                                   ✔  k3d-jan16-cluster ⎈  11:38:40 
Name:              nginx
Namespace:         default
Labels:            <none>
Annotations:       <none>
Selector:          app=nginx
Type:              ClusterIP
IP Family Policy:  SingleStack
IP Families:       IPv4
IP:                10.43.252.72
IPs:               10.43.252.72
Port:              <unset>  80/TCP
TargetPort:        80/TCP
Endpoints:         10.42.0.38:80,10.42.0.39:80,10.42.0.40:80 + 2 more...
Session Affinity:  None
Events:            <none>

or 
k exec k8s-web-to-nginx-765fc6b4dd-9pn6h -- nslookup k8s-web-to-nginx                                                            INT ✘  13s  k3d-jan16-cluster ⎈  11:44:29 
Server:         10.43.0.10
Address:        10.43.0.10:53

** server can't find k8s-web-to-nginx.cluster.local: NXDOMAIN

** server can't find k8s-web-to-nginx.cluster.local: NXDOMAIN


** server can't find k8s-web-to-nginx.svc.cluster.local: NXDOMAIN

** server can't find k8s-web-to-nginx.svc.cluster.local: NXDOMAIN

Name:   k8s-web-to-nginx.default.svc.cluster.local
Address: 10.43.5.31

command terminated with exit code 1
 ~/src/k8s/stashchuk  master  k get svc                                                                                                                                  ✔  k3d-jan16-cluster ⎈  11:44:49 
NAME               TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE
kubernetes         ClusterIP      10.43.0.1      <none>        443/TCP          152m
k8s-web-to-nginx   LoadBalancer   10.43.5.31     172.19.0.3    3333:31241/TCP   19m
nginx              ClusterIP      10.43.252.72   <none>        80/TCP           17m
 ~/src/k8s/stashchuk  master                                                                                                                                                                   ✔  11:45:04 

### get the response from nginx
k exec k8s-web-to-nginx-765fc6b4dd-9pn6h -- wget -qO- http://nginx                                                                         ✔  k3d-jan16-cluster ⎈  11:40:23 
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>



### try ingress


use container run times cri-o or containerd instead of docker
 tr
ssh into minikube ip
$sudo crictl ps # cri-o was specified as runtime

next:
1. install k3d on a linux box with max memory
2. try highwater tutorial


TESTING k3s documentation
https://k3d.io/v5.4.6/usage/exposing_services/

export KUBECONFIG="$(k3d kubeconfig write k3s-default)"

when starting new cluster (not k3s-default) 
k get pods -- result to The connection to the server 0.0.0.0:6550 was refused - did you specify the right host or port?

this solved the problem
export KUBECONFIG="$(k3d kubeconfig write jan16-cluster)" 


k get svc                                                                                                                              ✔  k3d-k3s-default ⎈  13:13:28 
NAME         TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.43.0.1     <none>        443/TCP   4m17s
nginx        ClusterIP   10.43.21.64   <none>        80/TCP    4s

k describe deployment nginx                                                                                                            ✔  k3d-k3s-default ⎈  13:13:49 
Name:                   nginx
Namespace:              default
CreationTimestamp:      Wed, 17 Jan 2024 13:12:36 +0800
Labels:                 app=nginx
Annotations:            deployment.kubernetes.io/revision: 1
Selector:               app=nginx
Replicas:               1 desired | 1 updated | 1 total | 1 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:  app=nginx
  Containers:
   nginx:
    Image:        nginx
    Port:         <none>
    Host Port:    <none>
    Environment:  <none>
    Mounts:       <none>
  Volumes:        <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   nginx-77b4fdf86c (1/1 replicas created)
Events:
  Type    Reason             Age   From                   Message
  ----    ------             ----  ----                   -------
  Normal  ScalingReplicaSet  90s   deployment-controller  Scaled up replica set nginx-77b4fdf86c to 1

  # k3s cluster management
  k3d cluster  list                                                                                                                                                ✔  13:22:47 
NAME            SERVERS   AGENTS   LOADBALANCER
jan16-cluster   1/1       0/0      true
k3s-default     1/1       2/2      true

k3d cluster stop k3s-default 

add
